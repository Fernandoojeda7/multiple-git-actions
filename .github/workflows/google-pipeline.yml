name: Build and Deploy to GKE

on:
  push:
    branches:
      - main
      - staging
      - develop
      - "feature/*"
      - "skipe/*"

jobs:
  setup-build-publish-deploy:
    name: Configurar, Compilar, Publicar y Desplegar
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://example.com
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      # Paso 1: Autenticación, checkout, y configuración de entorno
      - name: Autenticarse con GitHub CLI usando token
        run: |
          echo "${{ secrets.GH_TOKEN }}" | gh auth login --with-token

      - name: Utilizar Node.js v20
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: git checkout
        uses: actions/checkout@v3

      - name: Autenticar en Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      # Configuración de kubectl para usar el nuevo complemento
      - name: Configurar kubectl con el nuevo complemento
        run: export USE_GKE_GCLOUD_AUTH_PLUGIN=True

      - name: Verificar si el repositorio de artefactos ya existe
        id: check_repo_exists
        run: |
          gcloud artifacts repositories describe equipzilla --location=europe-west1 --format="value(name)" || exit 1
        continue-on-error: true

      - name: Crear repositorio en Artifact Registry si no existe
        if: steps.check_repo_exists.outcome != 'success'
        run: |
          gcloud artifacts repositories create equipzilla --repository-format=docker --location=europe-west1

      - name: Obtener credenciales de Kubernetes
        run: gcloud container clusters get-credentials multi-actions --region europe-west1 --project thermal-loop-414917

      - name: Configurar credenciales de GKE
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: multi-actions
          location: europe-west1

      - name: Autenticarse en Docker para Artifact Registry
        run: |
          gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://europe-west1-docker.pkg.dev

      # Paso 2: Compilar y Publicar
      - name: Compilar y Publicar
        run: |
          if [[ $GITHUB_REF = "refs/heads/main" ]]; then
            # Desplegar en producción
            docker build \
            --tag "europe-west1-docker.pkg.dev/thermal-loop-414917/equipzilla/equipzilla:latest" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .

            docker push "europe-west1-docker.pkg.dev/thermal-loop-414917/equipzilla/equipzilla:latest"
          elif [[ $GITHUB_REF = "refs/heads/staging" ]] || [[ $GITHUB_REF == refs/heads/skipe/* ]]; then
            # Desplegar en entorno de staging
            docker build \
            --tag "europe-west1-docker.pkg.dev/thermal-loop-414917/equipzilla/equipzilla:staging" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .

            docker push "europe-west1-docker.pkg.dev/thermal-loop-414917/equipzilla/equipzilla:staging"
          elif [[ $GITHUB_REF = "refs/heads/develop" ]] || [[ $GITHUB_REF == refs/heads/feature/* ]]; then
            # Incorporar cambios en desarrollo
            docker build \
            --tag "europe-west1-docker.pkg.dev/thermal-loop-414917/equipzilla/equipzilla:develop" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .

            docker push "europe-west1-docker.pkg.dev/thermal-loop-414917/equipzilla/equipzilla:develop"

            if [[ $GITHUB_REF == refs/heads/feature/* ]]; then
              # Crear pull request de feature/* a develop
              gh pr create --base develop --head $GITHUB_REF --title "Pull Request para incorporar cambios en $GITHUB_REF a develop" --body "Descripción del pull request aquí"
            fi
          fi

      # Paso 3: Desplegar archivos de Kubernetes
      - name: Desplegar archivos de Kubernetes
        run: |
          if [[ $GITHUB_REF = "refs/heads/main" ]]; then
            kubectl apply -f main.yaml
            kubectl apply -f main-ingress.yaml
          elif [[ $GITHUB_REF = "refs/heads/staging" ]] || [[ $GITHUB_REF == refs/heads/skipe/* ]]; then
            kubectl apply -f staging.yaml
            kubectl apply -f staging-ingress.yaml
          elif [[ $GITHUB_REF = "refs/heads/develop" ]] || [[ $GITHUB_REF == refs/heads/feature/* ]]; then
            kubectl apply -f develop.yaml
            kubectl apply -f develop-ingress.yaml
          fi
